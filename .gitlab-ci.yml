stages:
  - select-env
  - check
  - deploy

.select:
  stage: select-env
  artifacts:
    paths:
      - gitlab_checks_env.sh
      - gitlab_checks_env.bat
  script:
      - echo "export CHECKS_ENV=$CHECKS_ENV_SELECT" >> gitlab_checks_env.sh
      - echo "set CHECKS_ENV=$CHECKS_ENV_SELECT" >> gitlab_checks_env.bat

autoselect-dev:
  extends: .select
  except:
    - /.*staging\/.*/
  variables:
    CHECKS_ENV_SELECT: dev

autoselect-staging:
  extends: .select
  only:
    - /.*staging\/.*/
  variables:
    CHECKS_ENV_SELECT: staging

.check:
  stage: check
  before_script:
    - test -z "$CHECKS_ENV" && source gitlab_checks_env.sh
    - dmenv install

check/linux:
  extends: .check
  except:
    - schedules
  script:
    - dmenv run -- python run-ci.py check --runner linux --env "$CHECKS_ENV"
    - mv coverage/lcov-report lcov-report
  artifacts:
    paths:
      - lcov-report/
    expire_in: 7 days
  tags:
    - linux

check/macos:
  extends: .check
  except:
    - schedules
  script:
    - dmenv run -- python run-ci.py check --runner macos --env "$CHECKS_ENV"
  tags:
    - macos

.check/windows:
  stage: check
  before_script:
    - if "%CHECKS_ENV%"=="" CALL gitlab_checks_env.bat
    - dmenv install
  tags:
    - windows
  allow_failure: true

check/windows/edge:
  extends: .check/windows
  script:
    - dmenv run -- python run-ci.py check --runner windows-edge --env %CHECKS_ENV%

check/windows/ie:
  extends: .check/windows
  only:
    - schedules
  script:
    - dmenv run -- python run-ci.py check --runner windows-ie --env %CHECKS_ENV%

check/windows/ie/manual:
  extends: .check/windows
  when: manual
  script:
    - dmenv run -- python run-ci.py check --runner windows-ie --env %CHECKS_ENV%

check/linux/nightly:
  extends: .check
  only:
    - schedules
  script:
    - dmenv run -- python run-ci.py check --runner linux --nightly
    - dmenv run -- python run-ci.py compat
  tags:
    - linux

check/macos/nightly:
  extends: .check
  only:
    - schedules
  script:
    - dmenv run -- python run-ci.py check --runner macos --nightly
  tags:
    - macos

.deploy:
  stage: deploy
  except:
    - schedules
  before_script:
    - dmenv install
  tags:
    - linux

deploy/sdk:
  extends: .deploy
  environment:
    name: prod
  only:
    - /\Av[0-9.]+(-(alpha|beta)[0-9]+)?\z/
  script:
    - dmenv run -- python run-ci.py deploy
        --env ${CI_ENVIRONMENT_NAME} --git-tag ${CI_COMMIT_TAG}

mirror:
  tags:
    - linux
  stage: deploy
  only:
    - /\Av[0-9.]+\z/   # public release tags only
    - master
  except:
    - schedules
  before_script:
    - dmenv install
  script:
    - dmenv run python run-ci.py mirror

pages:
  stage: deploy
  only:
    - master
  except:
    - schedules
  dependencies:
    - check/linux
  script:
    - mv lcov-report/ public/
  artifacts:
    paths:
      - public
    expire_in: 7 days
  tags:
    - linux

check/compat:
  extends: .check
  when: manual
  except:
    - master
  script:
    - dmenv run -- python run-ci.py compat --env "$CHECKS_ENV"
  tags:
    - linux

check/compat/master:
  extends: .check
  only:
    - master
  script:
    - dmenv run -- python run-ci.py compat
  tags:
    - linux
