variables:
  GCP_PROJECT_ID: "tanker-prod"

stages:
  - check
  - deploy

before_script:
  - python3 -m pipenv install

check/linux:
  stage: check
  except:
    - schedules
  script:
    - xvfb-run python3 -m pipenv run python ci/check.py --runner linux
  tags:
    - linux
  artifacts:
    paths:
    - packages/doc/dist/

check/macos:
  stage: check
  except:
    - schedules
  script:
    - python3 -m pipenv run python ci/check.py --runner macos
  tags:
    - macos

.check/windows:
  stage: check
  tags:
    - windows
  allow_failure: true

check/windows/edge:
  extends: .check/windows
  script:
    - python3 -m pipenv run python ci/check.py --runner windows-edge

check/windows/ie:
  extends: .check/windows
  only:
    - schedules
  script:
    - python3 -m pipenv run python ci/check.py --runner windows-ie

check/windows/ie/manual:
  extends: .check/windows
  when: manual
  script:
    - python3 -m pipenv run python ci/check.py --runner windows-ie

.deploy:
  stage: deploy
  except:
    - schedules
  tags:
    - linux

deploy/prod/sdk:
  extends: .deploy
  environment:
    name: prod
  only:
    - /\Adeploy\/sdk\/[0-9.]+(-(alpha|beta)[0-9]+)?\z/
  script:
    - python3 -m pipenv run python ci/deploy.py
        --gcp-project-id ${GCP_PROJECT_ID}
        --env ${CI_ENVIRONMENT_NAME} --git-tag ${CI_COMMIT_TAG}
        --delivery sdk
